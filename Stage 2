import java.util.*;

// Library System with Creational Design Patterns
public class LibrarySystem {

    // Singleton Pattern: Library
    public static class Library {
        private static Library instance; // Singleton instance
        private List<Book> items;

        private Library() {
            items = new ArrayList<>();
        }

        public static Library getInstance() {
            if (instance == null) {
                instance = new Library();
            }
            return instance;
        }

        public void addItem(Book item) {
            items.add(item);
        }

        public void displayLibrary() {
            System.out.println("Library Inventory:");
            for (Book item : items) {
                item.display();
            }
        }
    }

    // Builder Pattern: Book
    public static class Book {
        private int bookId;
        private String title;
        private String author;

        private Book(BookBuilder builder) {
            this.bookId = builder.bookId;
            this.title = builder.title;
            this.author = builder.author;
        }

        public void display() {
            System.out.println("Book ID: " + bookId + ", Title: " + title + ", Author: " + author);
        }

        // Builder class for constructing Book objects
        public static class BookBuilder {
            private int bookId;
            private String title;
            private String author;

            public BookBuilder setBookId(int bookId) {
                this.bookId = bookId;
                return this;
            }

            public BookBuilder setTitle(String title) {
                this.title = title;
                return this;
            }

            public BookBuilder setAuthor(String author) {
                this.author = author;
                return this;
            }

            public Book build() {
                return new Book(this);
            }
        }
    }

    // Main Method
    public static void main(String[] args) {
        // Creating books using Builder Pattern
        Book book1 = new Book.BookBuilder()
                .setBookId(1)
                .setTitle("The Great Gatsby")
                .setAuthor("F. Scott Fitzgerald")
                .build();

        Book book2 = new Book.BookBuilder()
                .setBookId(2)
                .setTitle("To Kill a Mockingbird")
                .setAuthor("Harper Lee")
                .build();

        Book book3 = new Book.BookBuilder()
                .setBookId(3)
                .setTitle("1984")
                .setAuthor("George Orwell")
                .build();

        // Using Singleton Pattern for Library
        Library library = Library.getInstance();
        library.addItem(book1);
        library.addItem(book2);
        library.addItem(book3);

        // Display Library
        library.displayLibrary();
    }
}
