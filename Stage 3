import java.util.ArrayList;
import java.util.List;

// Main LibrarySystem Class
public class LibrarySystem {

    // Composite Design Pattern: BookComponent (Abstract Component)
    public interface BookComponent {
        void display();
    }

    // Leaf: Book
    public static class Book implements BookComponent {
        private int bookId;
        private String title;
        private String author;

        public Book(int bookId, String title, String author) {
            this.bookId = bookId;
            this.title = title;
            this.author = author;
        }

        @Override
        public void display() {
            System.out.println("Book ID: " + bookId + ", Title: " + title + ", Author: " + author);
        }
    }

    // Composite: BookCategory
    public static class BookCategory implements BookComponent {
        private String categoryName;
        private List<BookComponent> components = new ArrayList<>();

        public BookCategory(String categoryName) {
            this.categoryName = categoryName;
        }

        public void add(BookComponent component) {
            components.add(component);
        }

        public void remove(BookComponent component) {
            components.remove(component);
        }

        @Override
        public void display() {
            System.out.println("Category: " + categoryName);
            for (BookComponent component : components) {
                component.display();
            }
        }
    }

    // Adapter Design Pattern: ExternalBookAdapter
    public static class ExternalBookAdapter implements BookComponent {
        private ExternalBook externalBook;

        public ExternalBookAdapter(ExternalBook externalBook) {
            this.externalBook = externalBook;
        }

        @Override
        public void display() {
            System.out.println("Book ID: " + externalBook.getId() + ", Title: " + externalBook.getName() + ", Author: " + externalBook.getWriter());
        }
    }

    // External system representation
    public static class ExternalBook {
        private int id;
        private String name;
        private String writer;

        public ExternalBook(int id, String name, String writer) {
            this.id = id;
            this.name = name;
            this.writer = writer;
        }

        public int getId() {
            return id;
        }

        public String getName() {
            return name;
        }

        public String getWriter() {
            return writer;
        }
    }

    public static void main(String[] args) {
        // Books and Categories (Composite Pattern)
        Book book1 = new Book(1, "The Great Gatsby", "F. Scott Fitzgerald");
        Book book2 = new Book(2, "To Kill a Mockingbird", "Harper Lee");
        Book book3 = new Book(3, "1984", "George Orwell");

        BookCategory fiction = new BookCategory("Fiction");
        fiction.add(book1);
        fiction.add(book2);

        BookCategory allBooks = new BookCategory("All Books");
        allBooks.add(fiction);
        allBooks.add(book3);

        System.out.println("Composite Design Pattern Example:");
        allBooks.display();

        // External Book Integration (Adapter Pattern)
        ExternalBook externalBook = new ExternalBook(101, "The Alchemist", "Paulo Coelho");
        BookComponent adaptedBook = new ExternalBookAdapter(externalBook);

        System.out.println("\nAdapter Design Pattern Example:");
        adaptedBook.display();
    }
}
