import java.util.*;

// Library System with Structural Design Patterns
public class LibrarySystem {

    // Composite Pattern: BookComponent and Category
    public interface BookComponent {
        void display();
    }

    public static class Book implements BookComponent {
        private int bookId;
        private String title;
        private String author;

        public Book(int bookId, String title, String author) {
            this.bookId = bookId;
            this.title = title;
            this.author = author;
        }

        @Override
        public void display() {
            System.out.println("Book ID: " + bookId + ", Title: " + title + ", Author: " + author);
        }
    }

    public static class Category implements BookComponent {
        private String name;
        private List<BookComponent> components;

        public Category(String name) {
            this.name = name;
            components = new ArrayList<>();
        }

        public void add(BookComponent component) {
            components.add(component);
        }

        @Override
        public void display() {
            System.out.println("Category: " + name);
            for (BookComponent component : components) {
                component.display();
            }
        }
    }

    // Adapter Pattern: ExternalBook and ExternalBookAdapter
    public static class ExternalBook {
        private int id;
        private String name;
        private String writer;

        public ExternalBook(int id, String name, String writer) {
            this.id = id;
            this.name = name;
            this.writer = writer;
        }

        public int getId() {
            return id;
        }

        public String getName() {
            return name;
        }

        public String getWriter() {
            return writer;
        }
    }

    public static class ExternalBookAdapter implements BookComponent {
        private ExternalBook externalBook;

        public ExternalBookAdapter(ExternalBook externalBook) {
            this.externalBook = externalBook;
        }

        @Override
        public void display() {
            System.out.println("Book ID: " + externalBook.getId() + ", Title: " + externalBook.getName() + ", Author: " + externalBook.getWriter());
        }
    }

    // Main Method
    public static void main(String[] args) {
        // Create Books and Categories using Composite Pattern
        Book book1 = new Book(1, "The Great Gatsby", "F. Scott Fitzgerald");
        Book book2 = new Book(2, "To Kill a Mockingbird", "Harper Lee");
        Category fiction = new Category("Fiction");
        fiction.add(book1);
        fiction.add(book2);

        // External Book Adapter (simulating integration with an external system)
        ExternalBook externalBook = new ExternalBook(101, "The Alchemist", "Paulo Coelho");
        BookComponent adaptedBook = new ExternalBookAdapter(externalBook);

        // Display Library Items
        fiction.display();
        adaptedBook.display();
    }
}
